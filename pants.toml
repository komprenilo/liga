[anonymous-telemetry]
enabled = true
repo_id = "a8cdb096-9b8c-4e8c-934a-4f582c591f04"

[GLOBAL]
pants_version = "2.15.0"

backend_packages.add = [
  "pants.backend.python",
  "pants.backend.python.lint.pylint",
  "pants.backend.python.lint.black",
  "pants.backend.python.typecheck.mypy",
]

[source]
root_patterns = ["python", "notebooks", "contrib"]

[python]
interpreter_constraints = [">=3.8,<3.10"]
enable_resolves = true

[python.resolves]
  # liga
  spark_3_2_1 = "3rdparty/python/spark_3_2_1.lock"
  spark_3_3_1 = "3rdparty/python/spark_3_3_1.lock"
  # liga-sklearn
  sklearn = "3rdparty/python/sklearn.lock"
  # liga-mlflow
  mlflow = "3rdparty/python/mlflow.lock"
  # ligavision
  vision_dsl = "3rdparty/python/vision_dsl.lock"
  vision_dsl_test = "3rdparty/python/vision_dsl_test.lock"
  ligavision = "3rdparty/python/ligavision.lock"
  ligavision_test = "3rdparty/python/ligavision_test.lock"

[black]
  version = "black==22.1.0"
  extra_requirements.add = ["click<8.1"]
  lockfile = "3rdparty/python/black.lock"
 
[pylint]
  version = "pylint==2.15.9"
  lockfile = "3rdparty/python/pylint.lock"

[mypy]
  version = "mypy==0.910"
  lockfile = "3rdparty/python/mypy.lock"

[pytest]
  version = "pytest==7.0.1"
  extra_requirements.add = [
    "pytest-timeout",
    "requests-mock",
  ]
  lockfile = "3rdparty/python/pytest.lock"
  
